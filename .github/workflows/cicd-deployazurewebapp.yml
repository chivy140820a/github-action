name: CI/CD Workflow on Windows

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          include-prerelease: true

      - name: Check .NET Core version
        run: dotnet --version

      - name: Build code
        run: dotnet build --configuration Release

      - name: Update Configuration for Staging
        run: |
          $json = Get-Content -Raw -Path "GitHubAction/appsettings.json" | ConvertFrom-Json
          $json.ConnectionStrings.DefaultConnection = "YourConnectionStringForStaging"
          $json.SomeOtherField = "NewValue"
          $json | ConvertTo-Json -Depth 32 | Set-Content -Path "./appsettings.json"

      - name: Run Tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Publish code
        run: dotnet publish --configuration Release --output ./publish

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t chivy14082000/demogitaction:${{ github.sha }} .

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push Docker image
        run: docker push chivy14082000/demogitaction:${{ github.sha }}

      - name: Cleanup old Docker images
        run: docker image prune -af

  deploy:
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main'
    needs: build-and-deploy

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          include-prerelease: true

      - name: Publish code
        run: dotnet publish --configuration Release --output ./publish

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'your-app-name'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ./publish
