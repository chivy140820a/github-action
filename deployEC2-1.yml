name: CI/CD Workflow on Ubuntu

on:
  push:
    branches:
      - '**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          include-prerelease: true

      - name: Check .NET Core version
        run: dotnet --version

      - name: Build code
        run: dotnet build --configuration Release

      - name: Update Configuration for Staging
        run: |
          jq '.ConnectionStrings.DefaultConnection = "YourConnectionStringForStaging"' GitHubAction/appsettings.json > tmp.$$.json && mv tmp.$$.json GitHubAction/appsettings.json

      - name: Install coverlet
        run: dotnet tool install --global coverlet.console

      - name: Run Tests with Coverage
        run: |
          export PATH="$PATH:$HOME/.dotnet/tools"
          dotnet test --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./coverage/

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONARQUBE_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONARQUBE_ORG }}
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.cs.opencover.reportsPaths=coverage.opencover.xml

      - name: Publish code
        run: dotnet publish --configuration Release --output ./publish

      - name: Zip artifact
        run: zip -r my-app.zip ./publish

      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'publish/'
          DEST_DIR: 'your-app/'

      - name: Deploy to EC2 via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name your-application-name \
            --deployment-group-name your-deployment-group \
            --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},bundleType=zip,key=your-app/my-app.zip \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --region us-east-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t chivy14082000/demogitaction:${{ github.sha }} -f GitHubAction/Dockerfile GitHubAction/

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Push Docker image
        run: docker push chivy14082000/demogitaction:${{ github.sha }}

      - name: Cleanup old Docker images
        run: docker image prune -af

